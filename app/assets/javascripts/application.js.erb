// This is a manifest file that'll be compiled into application.js, which will include all the files
// listed below.
//
// Any JavaScript/Coffee file within this directory, lib/assets/javascripts, vendor/assets/javascripts,
// or any plugin's vendor/assets/javascripts directory can be referenced here using a relative path.
//
// It's not advisable to add code directly here, but if you do, it'll appear at the bottom of the
// compiled file.
//
// Read Sprockets README (https://github.com/sstephenson/sprockets#sprockets-directives) for details
// about supported directives.
//
//= require jquery
//= require jquery_ujs
//= require turbolinks
//= require underscore
//= require backbone

//= require_self
//= require_tree ./backbone/routers
//= require_tree ./backbone/models
//= require_tree ./backbone/collections
//= require_tree ./backbone/views
//= require_tree ./templates
//= require_tree .

var App = {
	Models: {},
	Collections: {},
	Views: {},
	Routers: {}
};

var bearID;
var lastSearch;
// App.openLogin = true;
$(function(){
	var time = $.now();	
	console.log(time);
	$('body').on('click', '#search_button', search);
	$('body').on('click', '#login_button', toggleLoginForm);
	$('body').on('click', '.actions', toggleLoginForm);


	// Automatically sends login form
	// $(document).ready(function() {
 //  	$('#login_submit').trigger('click');
	// });
	
	App.bingView = new App.Views.BingView();
	var sPath = window.location.pathname;

	if (sPath == '/' && $('.bear_box').attr('id') != 'none') {
		//post existing bear
		bearID = parseInt($('.bear_box').attr('id'));
		console.log('bearID ' + bearID);
		$.get('/bears/' + bearID).done(function(bear){
			console.log(bear);
			App.bear = new App.Models.Bear(bear);
			App.bearView = new App.Views.BearView({
				model: App.bear
			});
			$('.login_menu').toggle();
		});
	} else {
		//post new bear
		// $.post('/bears').done(function(bear){
		if (localStorage['bear']) {
			
		} else {
			resetLocalStorageBear();
		}

		var bear = JSON.parse(localStorage['bear']);
		console.log(bear);
		App.bear = bear;
		App.bearView = new App.Views.BearView({model: App.bear});
	}

	if (window.location.pathname == '/') {
		// App.Routers.UsersRouter = new App.Routers.UsersRouter({pushState: true});
		Backbone.history.start();
	}

	$('body').on('keypress',function(e) {
    if(e.which == 13) {
			search();
    }
	});
	
	// window.replaceState = function(){    
 //      location.reload();
	// }

	App.jPM = $.jPanelMenu({
		menu: '.search-div',
	    trigger: '#open-search',
	    animated: true,
	    duration: 300,
	    direction: 'right',
	    excludedPanelContent: '.search_div'
	});

	App.jPM.on();

});

function resetLocalStorageBear(){
	// localStorage.setItem('attributes.id', 'adoptable');				
	// localStorage.setItem('attributes.name', 'Valerie');			
	// localStorage.setItem('attributes.gender', 'F');
	// localStorage.setItem('attributes.energy', 100);
	// localStorage.setItem('attributes.happiness', 100);
	// localStorage.setItem('attributes.hunger', 100);

	var newBear = {
		'attributes': {
			'id': 'adoptable', 
			'name': 'Valerie', 
			'gender': 'F', 
			'energy': 100, 
			'happiness': 100, 
			'hunger': 100
		}
	}
	localStorage['bear'] = JSON.stringify(newBear);
	console.log(localStorage['bear']);
	
}

function renderErrors(errors){
	for (var i = 0; i < errors.length; i++){
		var error = $('<p>').text(i).prependTo('#login').css('color', 'red');
	}
};

function toggleLoginForm() {
	console.log('toggle');
	$('.login_menu').slideToggle();
}

function search(){
	console.log('whats not happening?');
		var value = $('input[name="search"]').val();
		var joinedValue = value.split(' ').join('+');
		console.log(joinedValue);
		var newSearch = {
			search: joinedValue
		};
		console.log('newSearch: ' + newSearch);
	$.post('../bings/', newSearch).done(function(searches){
		$('#search_zone').empty();
		$('input[name="search"]').val('');
		console.log(searches);
		for(var i = 0; i < searches.d.results.length; i++) {
			var searchTitle = searches.d.results[i].Title;
			var searchDesc = searches.d.results[i].Description;
			var searchUrl = searches.d.results[i].Url;
			var searchDisplayUrl = searches.d.results[i].DisplayUrl;
			var searchUrlHost = searchUrl.host;
			console.log(searchUrl);
			if (searchTitle) {
				var searchBox = $('<div>').addClass('search_box');
				var searchUl = $('<ul>').addClass('search_ul');
				var titleLi = $('<li>').text(searchTitle).addClass('search_title').addClass('search_li');
				var descLi = $('<li>').text(searchDesc).addClass('search_desc').addClass('search_li');
				var urlA = $('<a>').text(searchDisplayUrl).attr('href', searchUrl);
				var urlLi = $('<li>').append(urlA).addClass('search_url').addClass('search_li');
				searchBox.append(titleLi).append(descLi).append(urlLi);
				$('#search_zone').append(searchBox);
				App.jPM.trigger();
			}	
		}
	});
}